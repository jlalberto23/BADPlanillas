-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;

CREATE TABLE IF NOT EXISTS public.anio_calendario (
    id_anio bigserial NOT NULL,
    anio integer NOT NULL,
    fecha_inicio date NOT NULL,
    fecha_fin date NOT NULL,
    estado character varying(255) COLLATE pg_catalog."default" NOT NULL DEFAULT 'activo'::character varying,
    CONSTRAINT anio_calendario_pkey PRIMARY KEY (id_anio),
    CONSTRAINT anio_calendario_anio_unique UNIQUE (anio)
);

CREATE TABLE IF NOT EXISTS public."areaEmpresa" (
    id_area bigserial NOT NULL,
    "nombreArea" character varying(255) COLLATE pg_catalog."default" NOT NULL,
    "descripcionArea" character varying(255) COLLATE pg_catalog."default" NOT NULL,
    "id_jefeArea" bigint,
    "id_deptoEmpresa" bigint,
    CONSTRAINT "areaEmpresa_pkey" PRIMARY KEY (id_area)
);

CREATE TABLE IF NOT EXISTS public.cache (
    key character varying(255) COLLATE pg_catalog."default" NOT NULL,
    value text COLLATE pg_catalog."default" NOT NULL,
    expiration integer NOT NULL,
    CONSTRAINT cache_pkey PRIMARY KEY (key)
);

CREATE TABLE IF NOT EXISTS public.cache_locks (
    key character varying(255) COLLATE pg_catalog."default" NOT NULL,
    owner character varying(255) COLLATE pg_catalog."default" NOT NULL,
    expiration integer NOT NULL,
    CONSTRAINT cache_locks_pkey PRIMARY KEY (key)
);

CREATE TABLE IF NOT EXISTS public.centro_costo (
    id_centro_costo bigserial NOT NULL,
    "id_deptoEmpresa" bigint NOT NULL,
    id_anio bigint NOT NULL,
    presupuesto_total numeric(9, 2) NOT NULL,
    presupuesto_restante numeric(9, 2) NOT NULL DEFAULT '0'::numeric,
    CONSTRAINT centro_costo_pkey PRIMARY KEY (id_centro_costo),
    CONSTRAINT centro_costo_id_deptoempresa_id_anio_unique UNIQUE ("id_deptoEmpresa", id_anio)
);

CREATE TABLE IF NOT EXISTS public.conceptos_empleado (
    id_concepto_empleado bigserial NOT NULL,
    id_planilla_detalle bigint NOT NULL,
    codigo_concepto character varying(255) COLLATE pg_catalog."default" NOT NULL,
    fecha date NOT NULL,
    monto numeric(9, 2) NOT NULL,
    CONSTRAINT conceptos_empleado_pkey PRIMARY KEY (id_concepto_empleado)
);

CREATE TABLE IF NOT EXISTS public.departamento (
    id_departamento bigserial NOT NULL,
    "nombreDepartamento" character varying(255) COLLATE pg_catalog."default" NOT NULL,
    id_pais bigint NOT NULL,
    CONSTRAINT departamento_pkey PRIMARY KEY (id_departamento)
);

CREATE TABLE IF NOT EXISTS public."departamentoEmpresa" (
    "id_deptoEmpresa" bigserial NOT NULL,
    "nombreDepto" character varying(255) COLLATE pg_catalog."default" NOT NULL,
    "descripcionDepto" character varying(255) COLLATE pg_catalog."default" NOT NULL,
    "id_jefeDepto" bigint,
    CONSTRAINT "departamentoEmpresa_pkey" PRIMARY KEY ("id_deptoEmpresa")
);

CREATE TABLE IF NOT EXISTS public.distritos (
    id_distritos bigserial NOT NULL,
    "nombreDistrito" character varying(255) COLLATE pg_catalog."default" NOT NULL,
    id_municipio bigint NOT NULL,
    CONSTRAINT distritos_pkey PRIMARY KEY (id_distritos)
);

CREATE TABLE IF NOT EXISTS public.empleados (
    id_empleado bigserial NOT NULL,
    primer_nombre character varying(255) COLLATE pg_catalog."default" NOT NULL,
    segundo_nombre character varying(255) COLLATE pg_catalog."default" NOT NULL,
    apellido_paterno character varying(255) COLLATE pg_catalog."default" NOT NULL,
    apellido_materno character varying(255) COLLATE pg_catalog."default" NOT NULL,
    apellido_casada character varying(255) COLLATE pg_catalog."default",
    fecha_nacimiento date NOT NULL,
    fecha_ingreso date NOT NULL,
    numero_documento character varying(20) COLLATE pg_catalog."default",
    dui character varying(9) COLLATE pg_catalog."default" NOT NULL,
    nit character varying(14) COLLATE pg_catalog."default" NOT NULL,
    codigo_isss character varying(9) COLLATE pg_catalog."default" NOT NULL,
    codigo_nup character varying(9) COLLATE pg_catalog."default" NOT NULL,
    salario_base numeric(9, 2) NOT NULL,
    estado_civil character varying(255) COLLATE pg_catalog."default" NOT NULL,
    sexo character varying(1) COLLATE pg_catalog."default" NOT NULL,
    correo_personal character varying(255) COLLATE pg_catalog."default" NOT NULL,
    correo_institucional character varying(255) COLLATE pg_catalog."default" NOT NULL,
    estado character varying(255) COLLATE pg_catalog."default" NOT NULL,
    carnet_empleado character varying(255) COLLATE pg_catalog."default" NOT NULL,
    tipo_documento character varying(255) COLLATE pg_catalog."default" NOT NULL,
    id_profesion bigint,
    id_puesto bigint,
    id_seccion bigint,
    created_at timestamp(0) without time zone,
    updated_at timestamp(0) without time zone,
    CONSTRAINT empleados_pkey PRIMARY KEY (id_empleado),
    CONSTRAINT empleados_carnet_empleado_unique UNIQUE (carnet_empleado),
    CONSTRAINT empleados_codigo_isss_unique UNIQUE (codigo_isss),
    CONSTRAINT empleados_codigo_nup_unique UNIQUE (codigo_nup),
    CONSTRAINT empleados_correo_institucional_unique UNIQUE (correo_institucional),
    CONSTRAINT empleados_correo_personal_unique UNIQUE (correo_personal),
    CONSTRAINT empleados_dui_unique UNIQUE (dui),
    CONSTRAINT empleados_nit_unique UNIQUE (nit)
);

CREATE TABLE IF NOT EXISTS public.failed_jobs (
    id bigserial NOT NULL,
    uuid character varying(255) COLLATE pg_catalog."default" NOT NULL,
    connection text COLLATE pg_catalog."default" NOT NULL,
    queue text COLLATE pg_catalog."default" NOT NULL,
    payload text COLLATE pg_catalog."default" NOT NULL,
    exception text COLLATE pg_catalog."default" NOT NULL,
    failed_at timestamp(0) without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT failed_jobs_pkey PRIMARY KEY (id),
    CONSTRAINT failed_jobs_uuid_unique UNIQUE (uuid)
);

CREATE TABLE IF NOT EXISTS public.job_batches (
    id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    total_jobs integer NOT NULL,
    pending_jobs integer NOT NULL,
    failed_jobs integer NOT NULL,
    failed_job_ids text COLLATE pg_catalog."default" NOT NULL,
    options text COLLATE pg_catalog."default",
    cancelled_at integer,
    created_at integer NOT NULL,
    finished_at integer,
    CONSTRAINT job_batches_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.jobs (
    id bigserial NOT NULL,
    queue character varying(255) COLLATE pg_catalog."default" NOT NULL,
    payload text COLLATE pg_catalog."default" NOT NULL,
    attempts smallint NOT NULL,
    reserved_at integer,
    available_at integer NOT NULL,
    created_at integer NOT NULL,
    CONSTRAINT jobs_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.migrations (
    id serial NOT NULL,
    migration character varying(255) COLLATE pg_catalog."default" NOT NULL,
    batch integer NOT NULL,
    CONSTRAINT migrations_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.model_has_permissions (
    permission_id bigint NOT NULL,
    model_type character varying(255) COLLATE pg_catalog."default" NOT NULL,
    model_id bigint NOT NULL,
    CONSTRAINT model_has_permissions_pkey PRIMARY KEY (
        permission_id,
        model_id,
        model_type
    )
);

CREATE TABLE IF NOT EXISTS public.model_has_roles (
    role_id bigint NOT NULL,
    model_type character varying(255) COLLATE pg_catalog."default" NOT NULL,
    model_id bigint NOT NULL,
    CONSTRAINT model_has_roles_pkey PRIMARY KEY (role_id, model_id, model_type)
);

CREATE TABLE IF NOT EXISTS public.municipios (
    id_municipio bigserial NOT NULL,
    "nombreMunicipio" character varying(255) COLLATE pg_catalog."default" NOT NULL,
    id_departamento bigint NOT NULL,
    CONSTRAINT municipios_pkey PRIMARY KEY (id_municipio)
);

CREATE TABLE IF NOT EXISTS public.pais (
    id_pais bigserial NOT NULL,
    "nombrePais" character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT pais_pkey PRIMARY KEY (id_pais)
);

CREATE TABLE IF NOT EXISTS public.parametros (
    clave character varying(255) COLLATE pg_catalog."default" NOT NULL,
    titulo character varying(255) COLLATE pg_catalog."default" NOT NULL,
    valor text COLLATE pg_catalog."default",
    descripcion character varying(255) COLLATE pg_catalog."default",
    created_at timestamp(0) without time zone,
    updated_at timestamp(0) without time zone,
    CONSTRAINT parametros_pkey PRIMARY KEY (clave)
);

CREATE TABLE IF NOT EXISTS public.password_reset_tokens (
    email character varying(255) COLLATE pg_catalog."default" NOT NULL,
    token character varying(255) COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp(0) without time zone,
    CONSTRAINT password_reset_tokens_pkey PRIMARY KEY (email)
);

CREATE TABLE IF NOT EXISTS public.permissions (
    id bigserial NOT NULL,
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    guard_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    description character varying(255) COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp(0) without time zone,
    updated_at timestamp(0) without time zone,
    CONSTRAINT permissions_pkey PRIMARY KEY (id),
    CONSTRAINT permissions_name_guard_name_unique UNIQUE (name, guard_name)
);

CREATE TABLE IF NOT EXISTS public.planilla (
    id_planilla bigserial NOT NULL,
    id_anio bigint NOT NULL,
    estado character varying(255) COLLATE pg_catalog."default" NOT NULL DEFAULT 'activo'::character varying,
    mes character varying(255) COLLATE pg_catalog."default" NOT NULL,
    fecha_generacion date,
    fecha_inicio date NOT NULL,
    fecha_fin date NOT NULL,
    total_ingresos numeric(9, 2) NOT NULL DEFAULT '0'::numeric,
    total_descuentos numeric(9, 2) NOT NULL DEFAULT '0'::numeric,
    total_aporte_patronal numeric(9, 2) NOT NULL DEFAULT '0'::numeric,
    salario_neto_total numeric(9, 2) NOT NULL DEFAULT '0'::numeric,
    CONSTRAINT planilla_pkey PRIMARY KEY (id_planilla),
    CONSTRAINT planilla_id_anio_mes_unique UNIQUE (id_anio, mes)
);

CREATE TABLE IF NOT EXISTS public.planilla_detalle (
    id_planilla_detalle bigserial NOT NULL,
    id_planilla bigint NOT NULL,
    id_empleado bigint NOT NULL,
    id_centro_costo bigint NOT NULL,
    total_ingresos numeric(9, 2) NOT NULL DEFAULT '0'::numeric,
    total_descuentos numeric(9, 2) NOT NULL DEFAULT '0'::numeric,
    total_aporte_patronal numeric(9, 2) NOT NULL DEFAULT '0'::numeric,
    salario_neto_total numeric(9, 2) NOT NULL DEFAULT '0'::numeric,
    CONSTRAINT planilla_detalle_pkey PRIMARY KEY (id_planilla_detalle),
    CONSTRAINT planilla_detalle_id_planilla_detalle_id_empleado_unique UNIQUE (
        id_planilla_detalle,
        id_empleado
    )
);

CREATE TABLE IF NOT EXISTS public.profesiones (
    id_profesion bigserial NOT NULL,
    "nombreProfesion" character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT profesiones_pkey PRIMARY KEY (id_profesion)
);

CREATE TABLE IF NOT EXISTS public.puestos (
    id_puesto bigserial NOT NULL,
    "nombrePuesto" character varying(255) COLLATE pg_catalog."default" NOT NULL,
    "descripcionPuesto" character varying(255) COLLATE pg_catalog."default" NOT NULL,
    salario_min numeric(9, 2) NOT NULL,
    salario_max numeric(9, 2) NOT NULL,
    CONSTRAINT puestos_pkey PRIMARY KEY (id_puesto)
);

CREATE TABLE IF NOT EXISTS public.role_has_permissions (
    permission_id bigint NOT NULL,
    role_id bigint NOT NULL,
    CONSTRAINT role_has_permissions_pkey PRIMARY KEY (permission_id, role_id)
);

CREATE TABLE IF NOT EXISTS public.roles (
    id bigserial NOT NULL,
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    guard_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    description character varying(255) COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp(0) without time zone,
    updated_at timestamp(0) without time zone,
    CONSTRAINT roles_pkey PRIMARY KEY (id),
    CONSTRAINT roles_name_guard_name_unique UNIQUE (name, guard_name)
);

CREATE TABLE IF NOT EXISTS public."seccionEmpresa" (
    id_seccion bigserial NOT NULL,
    "nombreSeccion" character varying(255) COLLATE pg_catalog."default" NOT NULL,
    "descripcionSeccion" character varying(255) COLLATE pg_catalog."default" NOT NULL,
    "id_jefeSeccion" bigint,
    id_area bigint,
    CONSTRAINT "seccionEmpresa_pkey" PRIMARY KEY (id_seccion)
);

CREATE TABLE IF NOT EXISTS public.sessions (
    id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    user_id bigint,
    ip_address character varying(45) COLLATE pg_catalog."default",
    user_agent text COLLATE pg_catalog."default",
    payload text COLLATE pg_catalog."default" NOT NULL,
    last_activity integer NOT NULL,
    CONSTRAINT sessions_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.tabla_renta (
    tramo character varying(255) COLLATE pg_catalog."default" NOT NULL,
    salario_desde numeric(9, 2) NOT NULL,
    salario_hasta numeric(9, 2),
    porcentaje numeric(1, 4) NOT NULL,
    cuota_fija numeric(9, 2),
    sobre_exceso numeric(9, 2),
    CONSTRAINT tabla_renta_pkey PRIMARY KEY (tramo)
);

CREATE TABLE IF NOT EXISTS public.tipos_conceptos (
    codigo character varying(255) COLLATE pg_catalog."default" NOT NULL,
    tipo character varying(255) COLLATE pg_catalog."default" NOT NULL,
    nombre character varying(255) COLLATE pg_catalog."default" NOT NULL,
    descripcion text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT tipos_conceptos_pkey PRIMARY KEY (codigo)
);

CREATE TABLE IF NOT EXISTS public.users (
    id bigserial NOT NULL,
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    email character varying(255) COLLATE pg_catalog."default" NOT NULL,
    email_verified_at timestamp(0) without time zone,
    password character varying(255) COLLATE pg_catalog."default" NOT NULL,
    remember_token character varying(100) COLLATE pg_catalog."default",
    created_at timestamp(0) without time zone,
    updated_at timestamp(0) without time zone,
    CONSTRAINT users_pkey PRIMARY KEY (id),
    CONSTRAINT users_email_unique UNIQUE (email)
);

ALTER TABLE IF EXISTS public."areaEmpresa"
ADD CONSTRAINT areaempresa_id_deptoempresa_foreign FOREIGN KEY ("id_deptoEmpresa") REFERENCES public."departamentoEmpresa" ("id_deptoEmpresa") MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE IF EXISTS public."areaEmpresa"
ADD CONSTRAINT areaempresa_id_jefearea_foreign FOREIGN KEY ("id_jefeArea") REFERENCES public.empleados (id_empleado) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE IF EXISTS public.centro_costo
ADD CONSTRAINT centro_costo_id_anio_foreign FOREIGN KEY (id_anio) REFERENCES public.anio_calendario (id_anio) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE IF EXISTS public.centro_costo
ADD CONSTRAINT centro_costo_id_deptoempresa_foreign FOREIGN KEY ("id_deptoEmpresa") REFERENCES public."departamentoEmpresa" ("id_deptoEmpresa") MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE IF EXISTS public.conceptos_empleado
ADD CONSTRAINT conceptos_empleado_codigo_concepto_foreign FOREIGN KEY (codigo_concepto) REFERENCES public.tipos_conceptos (codigo) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE IF EXISTS public.conceptos_empleado
ADD CONSTRAINT conceptos_empleado_id_planilla_detalle_foreign FOREIGN KEY (id_planilla_detalle) REFERENCES public.planilla_detalle (id_planilla_detalle) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE IF EXISTS public."departamentoEmpresa"
ADD CONSTRAINT departamentoempresa_id_jefedepto_foreign FOREIGN KEY ("id_jefeDepto") REFERENCES public.empleados (id_empleado) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE IF EXISTS public.distritos
ADD CONSTRAINT distritos_id_municipio_foreign FOREIGN KEY (id_municipio) REFERENCES public.municipios (id_municipio) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE IF EXISTS public.empleados
ADD CONSTRAINT empleados_id_profesion_foreign FOREIGN KEY (id_profesion) REFERENCES public.profesiones (id_profesion) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE IF EXISTS public.empleados
ADD CONSTRAINT empleados_id_puesto_foreign FOREIGN KEY (id_puesto) REFERENCES public.puestos (id_puesto) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE IF EXISTS public.empleados
ADD CONSTRAINT empleados_id_seccion_foreign FOREIGN KEY (id_seccion) REFERENCES public."seccionEmpresa" (id_seccion) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE IF EXISTS public.model_has_permissions
ADD CONSTRAINT model_has_permissions_permission_id_foreign FOREIGN KEY (permission_id) REFERENCES public.permissions (id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE CASCADE;

ALTER TABLE IF EXISTS public.model_has_roles
ADD CONSTRAINT model_has_roles_role_id_foreign FOREIGN KEY (role_id) REFERENCES public.roles (id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE CASCADE;

ALTER TABLE IF EXISTS public.municipios
ADD CONSTRAINT municipios_id_departamento_foreign FOREIGN KEY (id_departamento) REFERENCES public.departamento (id_departamento) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE IF EXISTS public.planilla
ADD CONSTRAINT planilla_id_anio_foreign FOREIGN KEY (id_anio) REFERENCES public.anio_calendario (id_anio) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE IF EXISTS public.planilla_detalle
ADD CONSTRAINT planilla_detalle_id_centro_costo_foreign FOREIGN KEY (id_centro_costo) REFERENCES public.centro_costo (id_centro_costo) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE IF EXISTS public.planilla_detalle
ADD CONSTRAINT planilla_detalle_id_empleado_foreign FOREIGN KEY (id_empleado) REFERENCES public.empleados (id_empleado) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE IF EXISTS public.planilla_detalle
ADD CONSTRAINT planilla_detalle_id_planilla_foreign FOREIGN KEY (id_planilla) REFERENCES public.planilla (id_planilla) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE IF EXISTS public.role_has_permissions
ADD CONSTRAINT role_has_permissions_permission_id_foreign FOREIGN KEY (permission_id) REFERENCES public.permissions (id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE CASCADE;

ALTER TABLE IF EXISTS public.role_has_permissions
ADD CONSTRAINT role_has_permissions_role_id_foreign FOREIGN KEY (role_id) REFERENCES public.roles (id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE CASCADE;

ALTER TABLE IF EXISTS public."seccionEmpresa"
ADD CONSTRAINT seccionempresa_id_area_foreign FOREIGN KEY (id_area) REFERENCES public."areaEmpresa" (id_area) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE IF EXISTS public."seccionEmpresa"
ADD CONSTRAINT seccionempresa_id_jefeseccion_foreign FOREIGN KEY ("id_jefeSeccion") REFERENCES public.empleados (id_empleado) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION;

END;